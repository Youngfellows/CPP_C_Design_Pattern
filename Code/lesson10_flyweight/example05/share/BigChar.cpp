#include "../include/BigChar.h"


/**
 * @brief 常量: 数字字符串数组
 * 
 */
static const char * NUMBERS[] = { "....######......\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "....######......\n"
                                 "................\n",

                                 "......##........\n"
                                 "..######........\n"
                                 "......##........\n"
                                 "......##........\n"
                                 "......##........\n"
                                 "......##........\n"
                                 "..##########....\n"
                                 "................\n",

                                 "....######......\n"
                                 "..##......##....\n"
                                 "..........##....\n"
                                 "......####......\n"
                                 "....##..........\n"
                                 "..##............\n"
                                 "..##########....\n"
                                 "................\n",

                                 "....######......\n"
                                 "..##......##....\n"
                                 "..........##....\n"
                                 "......####......\n"
                                 "..........##....\n"
                                 "..##......##....\n"
                                 "....######......\n"
                                 "................\n",

                                 "........##......\n"
                                 "......####......\n"
                                 "....##..##......\n"
                                 "..##....##......\n"
                                 "..########......\n"
                                 "........##......\n"
                                 "......######....\n"
                                 "................\n",

                                 "..##########....\n"
                                 "..##............\n"
                                 "..##............\n"
                                 "..########......\n"
                                 "..........##....\n"
                                 "..##......##....\n"
                                 "....######......\n"
                                 "................\n",

                                 "....######......\n"
                                 "..##......##....\n"
                                 "..##............\n"
                                 "..########......\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "....######......\n"
                                 "................\n",

                                 "..##########....\n"
                                 "..##......##....\n"
                                 "..........##....\n"
                                 "........##......\n"
                                 "......##........\n"
                                 "......##........\n"
                                 "......##........\n"
                                 "................\n",

                                 "....######......\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "....######......\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "....######......\n"
                                 "................\n",

                                 "....######......\n"
                                 "..##......##....\n"
                                 "..##......##....\n"
                                 "....########....\n"
                                 "..........##....\n"
                                 "..##......##....\n"
                                 "....######......\n"
                                 "................\n",

                                 "................\n"
                                 "................\n"
                                 "................\n"
                                 "................\n"
                                 "..##########....\n"
                                 "................\n"
                                 "................\n"
                                 "................\n" };

BigChar::BigChar(int order)
{
    cout << "BigChar()构造函数" << endl;
    number = NUMBERS[order % 11];//获取数字字符串
}

BigChar::~BigChar()
{
     cout << "~BigChar()析构函数" << endl;
}

/**
 * @brief 显示数字字符串
 * 
 */
void BigChar::show()
{
    cout << this->number << endl;
}
